(function() {var implementors = {};
implementors["either"] = [{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, L&gt;&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt;","synthetic":false,"types":["either::Either"]}];
implementors["inkwell"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/comdat/enum.LLVMComdatSelectionKind.html\" title=\"enum llvm_sys::comdat::LLVMComdatSelectionKind\">LLVMComdatSelectionKind</a>&gt; for <a class=\"enum\" href=\"inkwell/comdat/enum.ComdatSelectionKind.html\" title=\"enum inkwell::comdat::ComdatSelectionKind\">ComdatSelectionKind</a>","synthetic":false,"types":["inkwell::comdat::ComdatSelectionKind"]},{"text":"impl&lt;'ctx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;<a class=\"struct\" href=\"inkwell/values/struct.FunctionValue.html\" title=\"struct inkwell::values::FunctionValue\">FunctionValue</a>&lt;'ctx&gt;, <a class=\"struct\" href=\"inkwell/values/struct.PointerValue.html\" title=\"struct inkwell::values::PointerValue\">PointerValue</a>&lt;'ctx&gt;&gt;&gt; for <a class=\"struct\" href=\"inkwell/values/struct.FunctionValue.html\" title=\"struct inkwell::values::FunctionValue\">FunctionValue</a>&lt;'ctx&gt;","synthetic":false,"types":["inkwell::values::fn_value::FunctionValue"]},{"text":"impl&lt;'ctx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;<a class=\"struct\" href=\"inkwell/values/struct.FunctionValue.html\" title=\"struct inkwell::values::FunctionValue\">FunctionValue</a>&lt;'ctx&gt;, <a class=\"struct\" href=\"inkwell/values/struct.PointerValue.html\" title=\"struct inkwell::values::PointerValue\">PointerValue</a>&lt;'ctx&gt;&gt;&gt; for <a class=\"struct\" href=\"inkwell/values/struct.PointerValue.html\" title=\"struct inkwell::values::PointerValue\">PointerValue</a>&lt;'ctx&gt;","synthetic":false,"types":["inkwell::values::ptr_value::PointerValue"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMLinkage.html\" title=\"enum llvm_sys::LLVMLinkage\">LLVMLinkage</a>&gt; for <a class=\"enum\" href=\"inkwell/module/enum.Linkage.html\" title=\"enum inkwell::module::Linkage\">Linkage</a>","synthetic":false,"types":["inkwell::module::Linkage"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMModuleFlagBehavior.html\" title=\"enum llvm_sys::LLVMModuleFlagBehavior\">LLVMModuleFlagBehavior</a>&gt; for <a class=\"enum\" href=\"inkwell/module/enum.FlagBehavior.html\" title=\"enum inkwell::module::FlagBehavior\">FlagBehavior</a>","synthetic":false,"types":["inkwell::module::FlagBehavior"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMUnnamedAddr.html\" title=\"enum llvm_sys::LLVMUnnamedAddr\">LLVMUnnamedAddr</a>&gt; for <a class=\"enum\" href=\"inkwell/values/enum.UnnamedAddress.html\" title=\"enum inkwell::values::UnnamedAddress\">UnnamedAddress</a>","synthetic":false,"types":["inkwell::values::global_value::UnnamedAddress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMOpcode.html\" title=\"enum llvm_sys::LLVMOpcode\">LLVMOpcode</a>&gt; for <a class=\"enum\" href=\"inkwell/values/enum.InstructionOpcode.html\" title=\"enum inkwell::values::InstructionOpcode\">InstructionOpcode</a>","synthetic":false,"types":["inkwell::values::instruction_value::InstructionOpcode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMIntPredicate.html\" title=\"enum llvm_sys::LLVMIntPredicate\">LLVMIntPredicate</a>&gt; for <a class=\"enum\" href=\"inkwell/enum.IntPredicate.html\" title=\"enum inkwell::IntPredicate\">IntPredicate</a>","synthetic":false,"types":["inkwell::IntPredicate"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMRealPredicate.html\" title=\"enum llvm_sys::LLVMRealPredicate\">LLVMRealPredicate</a>&gt; for <a class=\"enum\" href=\"inkwell/enum.FloatPredicate.html\" title=\"enum inkwell::FloatPredicate\">FloatPredicate</a>","synthetic":false,"types":["inkwell::FloatPredicate"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMAtomicOrdering.html\" title=\"enum llvm_sys::LLVMAtomicOrdering\">LLVMAtomicOrdering</a>&gt; for <a class=\"enum\" href=\"inkwell/enum.AtomicOrdering.html\" title=\"enum inkwell::AtomicOrdering\">AtomicOrdering</a>","synthetic":false,"types":["inkwell::AtomicOrdering"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMAtomicRMWBinOp.html\" title=\"enum llvm_sys::LLVMAtomicRMWBinOp\">LLVMAtomicRMWBinOp</a>&gt; for <a class=\"enum\" href=\"inkwell/enum.AtomicRMWBinOp.html\" title=\"enum inkwell::AtomicRMWBinOp\">AtomicRMWBinOp</a>","synthetic":false,"types":["inkwell::AtomicRMWBinOp"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMVisibility.html\" title=\"enum llvm_sys::LLVMVisibility\">LLVMVisibility</a>&gt; for <a class=\"enum\" href=\"inkwell/enum.GlobalVisibility.html\" title=\"enum inkwell::GlobalVisibility\">GlobalVisibility</a>","synthetic":false,"types":["inkwell::GlobalVisibility"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"llvm_sys/enum.LLVMDLLStorageClass.html\" title=\"enum llvm_sys::LLVMDLLStorageClass\">LLVMDLLStorageClass</a>&gt; for <a class=\"enum\" href=\"inkwell/enum.DLLStorageClass.html\" title=\"enum inkwell::DLLStorageClass\">DLLStorageClass</a>","synthetic":false,"types":["inkwell::DLLStorageClass"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()